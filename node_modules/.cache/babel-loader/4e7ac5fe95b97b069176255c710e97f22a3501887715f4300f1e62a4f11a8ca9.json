{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E15\\\\FYP frontend\\\\src\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\n// RestaurantList.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/restaurants');\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        const data = await response.json();\n        console.log(data); // Log to see what's coming back\n        const sortedData = data.sort((a, b) => a.name.localeCompare(b.name));\n        setRestaurants(sortedData);\n      } catch (error) {\n        console.error(\"There was a problem fetching the restaurant data:\", error);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  const filteredRestaurants = searchTerm ? restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(searchTerm.toLowerCase())) : restaurants;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurantcard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Restaurants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search restaurants...\",\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-grid\",\n      children: filteredRestaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/restaurant/${restaurant._id}`,\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, restaurant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"wfozuuWcpebNxZHJlM8Jk+5qW6Y=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","searchTerm","setSearchTerm","fetchRestaurants","response","fetch","ok","Error","status","data","json","console","log","sortedData","sort","a","b","name","localeCompare","error","filteredRestaurants","filter","restaurant","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","map","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/E15/FYP frontend/src/RestaurantList.js"],"sourcesContent":["// RestaurantList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RestaurantList = () => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurants = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/restaurants');\r\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n        const data = await response.json();\r\n        console.log(data); // Log to see what's coming back\r\n        const sortedData = data.sort((a, b) => a.name.localeCompare(b.name));\r\n        setRestaurants(sortedData);\r\n      } catch (error) {\r\n        console.error(\"There was a problem fetching the restaurant data:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchRestaurants();\r\n  }, []);\r\n  \r\n  const filteredRestaurants = searchTerm\r\n    ? restaurants.filter(restaurant =>\r\n        restaurant.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    : restaurants;\r\n\r\n  return (\r\n    <div className=\"restaurantcard-container\">\r\n      <h2>All Restaurants</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search restaurants...\"\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className=\"search-input\"\r\n      />\r\n      <div className=\"restaurant-grid\">\r\n        {filteredRestaurants.map(restaurant => (\r\n          <div key={restaurant._id} className=\"restaurant-card\">\r\n            <Link to={`/restaurant/${restaurant._id}`}>{restaurant.name}</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}