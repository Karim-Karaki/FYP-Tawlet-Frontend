{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E15\\\\FYP frontend\\\\src\\\\RestaurantList.js\",\n  _s = $RefreshSig$();\n// RestaurantList.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/restaurants', {\n          // Use the full URL from Postman\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json' // Assuming you're sending JSON data\n          },\n          body: JSON.stringify(formData) // Convert your form data to JSON\n        });\n        const data = await response.json();\n        // Sort the data alphabetically by the restaurant name\n        const sortedData = data.sort((a, b) => a.name.localeCompare(b.name));\n        setRestaurants(sortedData);\n      } catch (error) {\n        console.error(\"There was a problem fetching the restaurant data:\", error);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Restaurants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/restaurant/${restaurant._id}`,\n            children: restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, restaurant._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"UUwaAnmni1jVfIU2TonQ0iTwxYs=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","RestaurantList","_s","restaurants","setRestaurants","fetchRestaurants","response","fetch","method","headers","body","JSON","stringify","formData","data","json","sortedData","sort","a","b","name","localeCompare","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","restaurant","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/E15/FYP frontend/src/RestaurantList.js"],"sourcesContent":["// RestaurantList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RestaurantList = () => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRestaurants = async () => {\r\n        try {\r\n      const response = await fetch('http://localhost:5000/restaurants', { // Use the full URL from Postman\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json' // Assuming you're sending JSON data\r\n        },\r\n        body: JSON.stringify(formData) // Convert your form data to JSON\r\n      });\r\n        const data = await response.json();\r\n        // Sort the data alphabetically by the restaurant name\r\n        const sortedData = data.sort((a, b) => a.name.localeCompare(b.name));\r\n        setRestaurants(sortedData);\r\n      } catch (error) {\r\n        console.error(\"There was a problem fetching the restaurant data:\", error);\r\n      }\r\n    };\r\n    \r\n    \r\n\r\n    fetchRestaurants();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n   <div className=\"main-container\">\r\n      <h1>All Restaurants</h1>\r\n      <ul>\r\n        {restaurants.map(restaurant => (\r\n          <li key={restaurant._id}> {/* Make sure to use the correct unique key from your data, often it's _id for MongoDB documents */}\r\n            <Link to={`/restaurant/${restaurant._id}`}>{restaurant.name}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default RestaurantList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACN,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB,CAAC;UACrC,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC;QACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC;QACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;QACpEhB,cAAc,CAACY,UAAU,CAAC;MAC5B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;MAC3E;IACF,CAAC;IAIDjB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAwB,QAAA,eACDxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC5BxB,OAAA;QAAAwB,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB7B,OAAA;QAAAwB,QAAA,EACGrB,WAAW,CAAC2B,GAAG,CAACC,UAAU,iBACzB/B,OAAA;UAAAwB,QAAA,GAAyB,GAAC,eACxBxB,OAAA,CAACF,IAAI;YAACkC,EAAE,EAAG,eAAcD,UAAU,CAACE,GAAI,EAAE;YAAAT,QAAA,EAAEO,UAAU,CAACX;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAD5DE,UAAU,CAACE,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGV,CAAC;AAAC3B,EAAA,CA1CID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}