{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E15\\\\FYP frontend\\\\src\\\\AddRestaurant.js\",\n  _s = $RefreshSig$();\n// AddRestaurant.js \n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // Import useLocation to receive state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRestaurant = ({\n  editMode = false\n}) => {\n  _s();\n  var _location$state;\n  // New: Use location to access state passed from navigate\n  const location = useLocation();\n  const initialFormData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.initialFormData;\n  const [formData, setFormData] = useState({\n    portalUsername: '',\n    password: '',\n    name: '',\n    location: '',\n    cuisine: '',\n    menu: '',\n    openingHours: '',\n    sortieType: '',\n    Tables: ''\n  });\n\n  // Only run useEffect if editMode is true\n  useEffect(() => {\n    if (editMode && initialFormData) {\n      setFormData({\n        ...initialFormData,\n        cuisine: initialFormData.cuisine.join(','),\n        Tables: initialFormData.Tables.toString()\n      });\n    }\n  }, [editMode, initialFormData]);\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    const updatedValue = id === 'cuisine' ? value.split(',') : value;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: id === 'Tables' ? Number(updatedValue) || '' : updatedValue\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/restaurants', {\n        // Use the full URL from Postman\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Assuming you're sending JSON data\n        },\n        body: JSON.stringify(formData) // Convert your form data to JSON\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Restaurant added:', data);\n      // Optionally reset form or redirect user\n    } catch (error) {\n      console.error('Error adding restaurant:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a New Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"addRestaurantForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"portalUsername\",\n          placeholder: \"Portal Username\",\n          required: true,\n          value: formData.portalUsername,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: formData.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          required: true,\n          value: formData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          placeholder: \"Location\",\n          required: true,\n          value: formData.location,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"cuisine\",\n          placeholder: \"Cuisine (comma-separated)\",\n          required: true,\n          value: formData.cuisine,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"menu\",\n          placeholder: \"Menu URL\",\n          value: formData.menu,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"openingHours\",\n          placeholder: \"Opening Hours\",\n          required: true,\n          value: formData.openingHours,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"sortieType\",\n          placeholder: \"Sortie Type\",\n          value: formData.sortieType,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"Tables\",\n          placeholder: \"Tables\",\n          value: formData.Tables,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editMode ? 'Update Restaurant' : 'Add New Restaurant'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add New Restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRestaurant, \"HehCzNUXrE7w3ozi/kz+wwoBQj4=\", false, function () {\n  return [useLocation];\n});\n_c = AddRestaurant;\nexport default AddRestaurant;\nvar _c;\n$RefreshReg$(_c, \"AddRestaurant\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","AddRestaurant","editMode","_s","_location$state","location","initialFormData","state","formData","setFormData","portalUsername","password","name","cuisine","menu","openingHours","sortieType","Tables","join","toString","handleInputChange","e","id","value","target","updatedValue","split","prevFormData","Number","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Users/E15/FYP frontend/src/AddRestaurant.js"],"sourcesContent":["// AddRestaurant.js \r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation to receive state\r\n\r\nconst AddRestaurant = ({ editMode = false }) => {\r\n  // New: Use location to access state passed from navigate\r\n  const location = useLocation();\r\n  const initialFormData = location.state?.initialFormData;\r\n\r\n  const [formData, setFormData] = useState({\r\n    portalUsername: '',\r\n    password: '',\r\n    name: '',\r\n    location: '',\r\n    cuisine: '',\r\n    menu: '',\r\n    openingHours: '',\r\n    sortieType: '',\r\n    Tables: '',\r\n  });\r\n\r\n  // Only run useEffect if editMode is true\r\n  useEffect(() => {\r\n    if (editMode && initialFormData) {\r\n      setFormData({\r\n        ...initialFormData,\r\n        cuisine: initialFormData.cuisine.join(','),\r\n        Tables: initialFormData.Tables.toString(),\r\n      });\r\n    }\r\n  }, [editMode, initialFormData]);\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    const updatedValue = id === 'cuisine' ? value.split(',') : value;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [id]: id === 'Tables' ? Number(updatedValue) || '' : updatedValue,\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/restaurants', { // Use the full URL from Postman\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json' // Assuming you're sending JSON data\r\n        },\r\n        body: JSON.stringify(formData) // Convert your form data to JSON\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log('Restaurant added:', data);\r\n      // Optionally reset form or redirect user\r\n    } catch (error) {\r\n      console.error('Error adding restaurant:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container\">\r\n      <h1>Add a New Restaurant</h1>\r\n      <form id=\"addRestaurantForm\" onSubmit={handleSubmit}>\r\n        <input type=\"text\" id=\"portalUsername\" placeholder=\"Portal Username\" required value={formData.portalUsername} onChange={handleInputChange} />\r\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" required value={formData.password} onChange={handleInputChange} />\r\n        <input type=\"text\" id=\"name\" placeholder=\"Name\" required value={formData.name} onChange={handleInputChange} />\r\n        <input type=\"text\" id=\"location\" placeholder=\"Location\" required value={formData.location} onChange={handleInputChange} />\r\n        <input type=\"text\" id=\"cuisine\" placeholder=\"Cuisine (comma-separated)\" required value={formData.cuisine} onChange={handleInputChange} />\r\n        <input type=\"url\" id=\"menu\" placeholder=\"Menu URL\" value={formData.menu} onChange={handleInputChange} required />\r\n        <input type=\"text\" id=\"openingHours\" placeholder=\"Opening Hours\" required value={formData.openingHours} onChange={handleInputChange} />\r\n        <input type=\"text\" id=\"sortieType\" placeholder=\"Sortie Type\" value={formData.sortieType} onChange={handleInputChange} />\r\n        <input type=\"number\" id=\"Tables\" placeholder=\"Tables\" value={formData.Tables} onChange={handleInputChange} />\r\n        <button type=\"submit\">{editMode ? 'Update Restaurant' : 'Add New Restaurant'}</button>\r\n        {/* Add other input elements for additional fields here */}\r\n        <button type=\"submit\">Add New Restaurant</button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AddRestaurant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}